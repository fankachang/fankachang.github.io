<?xml version="1.0" encoding="utf-8"?>
<search>
    
    
    <entry>
        <title><![CDATA[RamDisk On Macbook]]></title>
        <url>http://fankachang.github.io.git/2021/08/12/MacApp/RamDisk/</url>
        <content type="html"><![CDATA[<ul>
<li><p>開啟 工序指令編寫程式</p>
<p><img src="RamDisk_1.png" alt="RamDisk_1"></p>
</li>
<li><p>指令碼</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> shell script <span class="string">&quot;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">if ! test -e /Volumes/\&quot;RamDisk\&quot; ; then</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">diskutil erasevolume HFS+ \&quot;RamDisk\&quot; `hdiutil attach -nomount ram://4194304`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mkdir -p /Volumes/RamDisk/Google</span></span><br><span class="line"><span class="string">rm -rf /Users/UserID/Library/Caches/Google/Chrome/Default/Cache</span></span><br><span class="line"><span class="string">ln -s /Volumes/RamDisk/Google /Users/UserID/Library/Caches/Google/Chrome/Default/Cache</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mkdir -p /Volumes/RamDisk/Edge</span></span><br><span class="line"><span class="string">rm -rf &#x27;/Users/UserID/Library/Caches/Microsoft Edge/Default/Cache&#x27;</span></span><br><span class="line"><span class="string">ln -s /Volumes/RamDisk/Edge &#x27;/Users/UserID/Library/Caches/Microsoft Edge/Default/Cache&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">chflags hidden /Volumes/RamDisk/ ;killall Finder</span></span><br><span class="line"><span class="string">&quot;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>4194304 : 2GB</li>
<li>/Users/UserID/Library/Caches/Google/Chrome/Default/Cache : 轉移 Google Cache 目錄到 RamDisk</li>
<li>/Users/UserID/Library/Caches/Microsoft Edge/Default/Cache: 轉移 Microsoft Edge Cache 目錄到 RamDisk</li>
</ul>
</li>
</ul>
]]></content>
        
        <categories>
            
            <category> MacApp </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mabook </tag>
            
            <tag> App </tag>
            
        </tags>
        
    </entry>
    
    <entry>
        <title><![CDATA[Docker-machine-parallels]]></title>
        <url>http://fankachang.github.io.git/2020/05/16/Docker/Docker_Machine/</url>
        <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><ul>
<li><p>因 Docker on MAC 的 IO 會很慢的瓶頸，查資料大致可分為以下幾種解法：</p>
<ol>
<li>Disktop Tool 改使用 docker ce edge 版本</li>
<li>改用 docker-machine-parallels</li>
<li>使用 docker-sync 改善 IO</li>
</ol>
</li>
<li><p>本次使用 edge 版本、Docker-machine-parallels 還有 NFS 掛載來加速可由 14s 縮減到 4s</p>
</li>
</ul>
<h3 id="環境說明"><a href="#環境說明" class="headerlink" title="環境說明"></a>環境說明</h3><ul>
<li>docker-machine 並不包含 client command （也就是 docker），所以仍需要安裝 Docker Edge CE Version</li>
<li>檔案系統需要是大小寫區分才能編譯</li>
<li>需要 Parallels Desktop Pro 版本才支援 docker-machine-parallels</li>
<li>NFS 因 Macbook 本身有內建服務，所以採用本服務，但有搭配 docker-machine-nfs 套件進行設置</li>
<li>架構概念<ul>
<li>因為若直接用 docker -v volumeDir:containDir 掛載檔案系統（APFS）會有過慢的問題，所以volumeDir 是改成掛在 NFS Share Dir 下</li>
<li>所以實際上掛載關係是：<ol>
<li>docker container 掛載 Volume（nfsmount)</li>
<li>Volume 透過 docker volume create 綁定到 NFS Share Dir</li>
<li>NFS Service 將 APFS Dir 設定分享並指定連線權限（此部份由 docker-machine-nfs 協助）</li>
</ol>
</li>
</ul>
</li>
</ul>
<h3 id="安裝-Docker-Edge-CE-Version"><a href="#安裝-Docker-Edge-CE-Version" class="headerlink" title="安裝 Docker Edge CE Version"></a>安裝 Docker Edge CE Version</h3><p><a href="https://docs.docker.com/docker-for-mac/edge-release-notes/">Docker Edge for Mac 官方下載點</a></p>
<h3 id="Docker-machine-parallels-安裝"><a href="#Docker-machine-parallels-安裝" class="headerlink" title="Docker-machine-parallels 安裝"></a>Docker-machine-parallels 安裝</h3><ul>
<li><p>安裝 docker-machine-parallels</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install docker-machine-parallels</span><br></pre></td></tr></table></figure></li>
<li><p>建立 docker-parallels machine</p>
<ul>
<li><p>指令完成後會在 Parallels 生成一個叫做 prl-dev 的 Linux 核心的虛擬機  </p>
</li>
<li><p>指令： docker-machine create –driver=parallels prl-dev</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker-machine create --driver=parallels --engine-storage-driver=overlay2 --parallels-disk-size=120000  --parallels-cpu-count=8 --parallels-memory=32768 prl-dev</span><br><span class="line"></span><br><span class="line">Creating CA: /Users/fanka/.docker/machine/certs/ca.pem</span><br><span class="line">Creating client certificate: /Users/fanka/.docker/machine/certs/cert.pem</span><br><span class="line">Running pre-create checks...</span><br><span class="line">(prl-dev) Image cache directory does not exist, creating it at /Users/fanka/.docker/machine/cache...</span><br><span class="line">(prl-dev) No default Boot2Docker ISO found locally, downloading the latest release...</span><br><span class="line">(prl-dev) Latest release <span class="keyword">for</span> github.com/boot2docker/boot2docker is v19.03.5</span><br><span class="line">(prl-dev) Downloading /Users/fanka/.docker/machine/cache/boot2docker.iso from https://github.com/boot2docker/boot2docker/releases/download/v19.03.5/boot2docker.iso...</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>關閉後調整系統資源（CPU, Ram）</p>
<ul>
<li><p>因預設只會給 1 顆 CPU, 4G Ram 的資源，所以需要關閉後進行調整（有提供參數，但是使用後都說不支援，所以改用手動）</p>
</li>
<li><p>指令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//調整前重起虛擬機</span><br><span class="line">docker-machine stop prl-dev</span><br><span class="line"></span><br><span class="line">//調整後重起虛擬機</span><br><span class="line">docker-machine start prl-dev</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>取得 docker 環境</p>
<ul>
<li>需要執行以下指令將環境變數載入<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker-machine env prl-dev</span><br><span class="line"><span class="built_in">eval</span> $(docker-machine env prl-dev)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>載入 Image</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ImageName.tar | docker import - ImageName</span><br></pre></td></tr></table></figure></li>
<li><p>後需都會以 root 權限載跑，不影響 host 主機處理（看到的都是本機用戶權限，跳過不管）</p>
</li>
</ul>
<h3 id="NFS-Volume-設定"><a href="#NFS-Volume-設定" class="headerlink" title="NFS Volume 設定"></a>NFS Volume 設定</h3><ul>
<li><p>安裝模組</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install docker-machine-nfs</span><br></pre></td></tr></table></figure></li>
<li><p>建立 NFS 分享節點（prl-dev 是 docker-machine 名稱）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">docker-machine-nfs prl-dev --shared-folder=/System/Volumes/Data/Users/fanka/ProjectWorkDir</span><br><span class="line">[INFO] Configuration:</span><br><span class="line"></span><br><span class="line">  - Machine Name: prl-dev</span><br><span class="line">  - Shared Folder: /Users/fanka/ProjectWorkDir</span><br><span class="line">  - Mount Options: noacl,async,nfsvers=3</span><br><span class="line">  - Force: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">[INFO] machine presence ... OK</span><br><span class="line">[INFO] machine running ... OK</span><br><span class="line">[INFO] Lookup mandatory properties ... OK</span><br><span class="line"></span><br><span class="line">NFS already mounted.</span><br><span class="line"></span><br><span class="line">--------------------------------------------</span><br><span class="line"></span><br><span class="line">The docker-machine <span class="string">&#x27;prl-dev&#x27;</span></span><br><span class="line">is now mounted with NFS!</span><br><span class="line"></span><br><span class="line">ENJOY high speed mounts :D</span><br><span class="line"></span><br><span class="line">--------------------------------------------</span><br></pre></td></tr></table></figure></li>
<li><p>將 NFS 分享節點設定成 Volume 以給 Container 掛載</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker volume rm nfsmount</span><br><span class="line">docker volume create --driver <span class="built_in">local</span> \</span><br><span class="line">--opt <span class="built_in">type</span>=nfs --opt o=addr=10.211.55.2,rw,nolock,noacl,async,nfsvers=3 \</span><br><span class="line">--opt device=:/Users/fanka/Project/ProjectWorkDir nfsmount</span><br><span class="line"></span><br><span class="line">docker volume inspect nfsmount</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker volume rm nfsvsm</span><br><span class="line">docker volume create --driver <span class="built_in">local</span> \</span><br><span class="line">--opt <span class="built_in">type</span>=nfs --opt o=addr=10.211.55.2,rw,nolock,noacl,async,nfsvers=3 \</span><br><span class="line">--opt device=:/Users/fanka/Project/ProjectWorkDir2 nfsvsm</span><br><span class="line"></span><br><span class="line">docker volume inspect nfsvsm</span><br></pre></td></tr></table></figure></li>
<li><p>建立 Container</p>
<ul>
<li><p>指定 登入用戶 ID</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name=ProjectNameDev -v nfsmount:/home/userid/ProjectWorkDir --privileged=<span class="literal">true</span> -u 1000:1000 ImageName:latest bash</span><br></pre></td></tr></table></figure></li>
<li><p>不指定 登入用戶 ID</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name=ProjectNameDev -v nfsmount:/home/userid/ProjectWorkDir --privileged=<span class="literal">true</span> ImageName:latest bash</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>進入 Container（19 是 Container ID）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -u 1000:1000 -it 19 bash</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="測試讀寫速度"><a href="#測試讀寫速度" class="headerlink" title="測試讀寫速度"></a>測試讀寫速度</h3><ul>
<li><p>測試用指令：</p>
<ol>
<li>測試磁碟的IO寫速度： time dd if=/dev/zero of=test.dbf bs=8k count=300000</li>
<li>測試磁碟的IO讀速度： time dd if=test.dbf bs=8k count=300000 of=/dev/null</li>
</ol>
</li>
<li><p>Container With Volume （ Host 目錄 掛載成 Container 內的目錄）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">userid@a568c6f08902:~/ProjectWorkDir$ time dd <span class="keyword">if</span>=/dev/zero of=test.dbf bs=8k count=300000</span><br><span class="line">300000+0 records <span class="keyword">in</span></span><br><span class="line">300000+0 records out</span><br><span class="line">2457600000 bytes (2.5 GB) copied, 14.7852 s, 166 MB/s</span><br><span class="line"></span><br><span class="line">real  0m14.880s</span><br><span class="line">user  0m0.510s</span><br><span class="line">sys   0m7.852s</span><br><span class="line">userid@a568c6f08902:~/ProjectWorkDir$</span><br></pre></td></tr></table></figure></li>
<li><p>Container With NFS</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">userid@f8d45c431341:~/ProjectWorkDir$ time dd <span class="keyword">if</span>=/dev/zero of=test.dbf bs=8k count=300000</span><br><span class="line">300000+0 records <span class="keyword">in</span></span><br><span class="line">300000+0 records out</span><br><span class="line">2457600000 bytes (2.5 GB) copied, 4.16525 s, 590 MB/s</span><br><span class="line"></span><br><span class="line">real  0m4.263s</span><br><span class="line">user  0m0.283s</span><br><span class="line">sys   0m1.860s</span><br><span class="line">userid@f8d45c431341:~/ProjectWorkDir$</span><br></pre></td></tr></table></figure></li>
<li><p>Macbook APFS</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[20:09:14] fanka@FankaMBP16 ~/ProjectWorkDir %&gt;time dd <span class="keyword">if</span>=/dev/zero of=test.dbf bs=8k count=300000</span><br><span class="line">300000+0 records <span class="keyword">in</span></span><br><span class="line">300000+0 records out</span><br><span class="line">2457600000 bytes transferred <span class="keyword">in</span> 1.726226 secs (1423683730 bytes/sec)</span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=test.dbf bs=8k count=300000  0.15s user 1.51s system 92% cpu 1.788 total</span><br></pre></td></tr></table></figure></li>
<li><p>Parallels</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">UserID@vmName:~$ time dd <span class="keyword">if</span>=/dev/zero of=test.dbf bs=8k count=300000</span><br><span class="line">300000+0 records <span class="keyword">in</span></span><br><span class="line">300000+0 records out</span><br><span class="line">2457600000 bytes (2.5 GB, 2.3 GiB) copied, 2.23421 s, 1.1 GB/s</span><br><span class="line"></span><br><span class="line">real  0m2.237s</span><br><span class="line">user  0m0.081s</span><br><span class="line">sys 0m2.055s</span><br></pre></td></tr></table></figure></li>
</ul>
<p>結論： Macbook APFS（1.788s, 1.4GB/S ）&lt;  Parallels (2.237s, 1.1GB/S) &lt; Container With NFS （4.263s, 590MB/s） &lt;  Container With Volume (14.880, 166 MB/s)</p>
]]></content>
        
        <categories>
            
            <category> Docker </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
        <title><![CDATA[Docker-sync]]></title>
        <url>http://fankachang.github.io.git/2020/05/07/Docker/Docker_Sync/</url>
        <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><ul>
<li><p>因 Docker on MAC 的 IO 會很慢的瓶頸，查資料大致可分為以下幾種解法：</p>
<ol>
<li>Disktop Tool 改使用 docker ce edge 版本</li>
<li>改用 Docker-machine-parallels</li>
<li>推薦使用 docker-sync 改善 IO</li>
</ol>
</li>
</ul>
<h2 id="docker-sync-測試"><a href="#docker-sync-測試" class="headerlink" title="docker-sync 測試"></a>docker-sync 測試</h2><ul>
<li><p>安裝 docker-sync</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">gem install docker-sync</span><br><span class="line">brew install unison</span><br><span class="line">brew install eugenmayer/dockersync/unox</span><br><span class="line">brew install fswatch</span><br></pre></td></tr></table></figure></li>
<li><p>編寫同步 yml 檔案</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&#x27;2&#x27;</span></span><br><span class="line">syncs:</span><br><span class="line">  ProjectName-Sync:</span><br><span class="line">    src: <span class="string">&#x27;.&#x27;</span></span><br><span class="line">    sync_strategy: native_osx</span><br><span class="line">    sync_userid: 1000</span><br></pre></td></tr></table></figure></li>
<li><p>啟動 docker-sync</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">fanka@FankaMBP ~/ProjectName %&gt;docker-sync start</span><br><span class="line">      ok  Starting native_osx <span class="keyword">for</span> sync ProjectName-Sync</span><br><span class="line">  Unable to find image <span class="string">&#x27;eugenmayer/unison:2.51.2.1&#x27;</span> locally</span><br><span class="line">  2.51.2.1: Pulling from eugenmayer/unison</span><br><span class="line">  1eae7a7426b0: Pull complete</span><br><span class="line">  3aa35cd67672: Pull complete</span><br><span class="line">  0b90242c76a3: Pull complete</span><br><span class="line">  8bf04f18c959: Pull complete</span><br><span class="line">  dda7831d2dcd: Pull complete</span><br><span class="line">  060e04f93ee5: Pull complete</span><br><span class="line">  0a64e8572226: Pull complete</span><br><span class="line">  3ca3985a9426: Pull complete</span><br><span class="line">  Digest: sha256:636559840565e7c6358d11b6a0ece9241f5ad476dc5c4b61af52be25ce3a3419</span><br><span class="line">  Status: Downloaded newer image <span class="keyword">for</span> eugenmayer/unison:2.51.2.1</span><br><span class="line">  doing initial sync with unison</span><br><span class="line">  Unison 2.51.2 (ocaml 4.06.1): Contacting server...</span><br><span class="line">  Looking <span class="keyword">for</span> changes</span><br><span class="line">  Reconciling changes</span><br><span class="line">  Propagating updates</span><br><span class="line">  UNISON 2.51.2 (OCAML 4.06.1) started propagating changes at 15:40:17.91 on 07 May 2020</span><br><span class="line">  [BGN] Copying ProjectName from /host_sync to /app_sync</span><br><span class="line">  Failed: Error <span class="keyword">in</span> copying locally:</span><br><span class="line">  /host_sync/ProjectName/lagvm_p/.DS_Store: No such file or directory</span><br><span class="line">  [BGN] Copying .DS_Store from /host_sync to /app_sync</span><br><span class="line">  [END] Copying .DS_Store</span><br><span class="line">  [BGN] Copying .docker-sync from /host_sync to /app_sync</span><br><span class="line">  [END] Copying .docker-sync</span><br><span class="line">  [BGN] Copying build_la.sh from /host_sync to /app_sync</span><br><span class="line">  [END] Copying build_la.sh</span><br><span class="line">  [BGN] Copying build_qnx.sh from /host_sync to /app_sync</span><br><span class="line">  [END] Copying build_qnx.sh</span><br><span class="line">  [BGN] Copying docker-sync.yml from /host_sync to /app_sync</span><br><span class="line">  [END] Copying docker-sync.yml</span><br><span class="line">  [BGN] Copying upla.sh from /host_sync to /app_sync</span><br><span class="line">  [END] Copying upla.sh</span><br><span class="line">  UNISON 2.51.2 (OCAML 4.06.1) finished propagating changes at 16:03:26.37 on 07 May 2020</span><br><span class="line">  Saving synchronizer state</span><br><span class="line">  Synchronization incomplete at 16:03:26  (6 items transferred, 0 skipped, 1 failed)</span><br><span class="line">    failed: ProjectName</span><br><span class="line">  real	1h 37m 18s</span><br><span class="line">  user	7m 39.82s</span><br><span class="line">  sys	7m 16.35s</span><br><span class="line">  chown ing file to uid 1000</span><br><span class="line">  b9040330be0b548ad7a2a5b02dc9a6e9da38100bd6bd5409b5601fe1109361ef</span><br><span class="line">      success  Sync container started</span><br><span class="line">      success  Starting Docker-Sync <span class="keyword">in</span> the background</span><br><span class="line">fanka@FankaMBP ~/ProjectName %&gt;ls</span><br></pre></td></tr></table></figure></li>
<li><p>掛載 share volume 到 Container</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name=ContainerName -v ProjectName-Sync:/home/UserID/ProjectName DockerImageName:latest bash</span><br></pre></td></tr></table></figure></li>
<li><p>確認 掛載目錄是否有資料（ 72 is Container ID）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fanka@FankaMBP ~ %&gt;docker <span class="built_in">exec</span> -it 72 ls /home/UserID/ProjectName                                                                                                                                                [16:17:54]</span><br><span class="line">build_1.sh  docker-sync.yml				 run.sh</span><br><span class="line">build_2.sh  ProjectName</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
        
        <categories>
            
            <category> Docker </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
        <title><![CDATA[Flowchart(流程圖)]]></title>
        <url>http://fankachang.github.io.git/2019/12/09/Hexo/%25E5%25A4%2596%25E6%258E%259B/hexo_mermaid_flowchart/</url>
        <content type="html"><![CDATA[<h2 id="Mermaid-Flowchart-流程圖"><a href="#Mermaid-Flowchart-流程圖" class="headerlink" title="Mermaid - Flowchart(流程圖)"></a>Mermaid - Flowchart(流程圖)</h2><h3 id="基礎語法"><a href="#基礎語法" class="headerlink" title="基礎語法"></a>基礎語法</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># graph 代指流程圖,固定寫法</span></span><br><span class="line"><span class="comment"># TD等同於 TB（Top to Bottom）, 就是說自上而下的流程圖</span></span><br><span class="line">graph TD</span><br><span class="line">  Start --&gt; Stop</span><br></pre></td></tr></table></figure>

<pre class="mermaid">graph TD
  Start --> Stop</pre>

<ul>
<li>TB - top bottom(自上而下)</li>
<li>BT - bottom top(自下而上)</li>
<li>RL - right left(自右向左)</li>
<li>LR - left right(自左向右)</li>
<li>TD - same as TB(自上而下)</li>
</ul>
<h3 id="基本節點"><a href="#基本節點" class="headerlink" title="基本節點"></a>基本節點</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 模認方式</span></span><br><span class="line">graph LR</span><br><span class="line">  id</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<pre class="mermaid">graph LR
  id</pre>

<h3 id="基本節點變更內文說明"><a href="#基本節點變更內文說明" class="headerlink" title="基本節點變更內文說明"></a>基本節點變更內文說明</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 加上一個修飾符 []</span></span><br><span class="line">graph LR</span><br><span class="line">  id<span class="section">[我是一個文本節點]</span></span><br></pre></td></tr></table></figure>

<pre class="mermaid">graph LR
  id[我是一個文本節點]</pre>

<h3 id="圓角節點"><a href="#圓角節點" class="headerlink" title="圓角節點"></a>圓角節點</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 圓角節點的展示就是加上一個修飾符()</span></span><br><span class="line">graph LR</span><br><span class="line">  id(我是一個圓角節點)</span><br></pre></td></tr></table></figure>

<pre class="mermaid">graph LR
  id(我是一個圓角節點)</pre>

<h3 id="圓形節點"><a href="#圓形節點" class="headerlink" title="圓形節點"></a>圓形節點</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 圓角節點的展示就是加上一個修飾符(())</span></span><br><span class="line">graph TD</span><br><span class="line">  test((我是一個圓形節點))</span><br></pre></td></tr></table></figure>

<pre class="mermaid">graph TD
  test((我是一個圓形節點))</pre>

<h3 id="書籤節點"><a href="#書籤節點" class="headerlink" title="書籤節點"></a>書籤節點</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 該節點的展示就是加上一個修飾符&gt;]</span></span><br><span class="line">graph TD</span><br><span class="line">  test&gt;我是書簽形的節點]</span><br></pre></td></tr></table></figure>

<pre class="mermaid">graph TD
  test>我是書簽形的節點]</pre>

<h3 id="菱形節點"><a href="#菱形節點" class="headerlink" title="菱形節點"></a>菱形節點</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 菱形節點的展示就是加上一個修飾符&#123;&#125;</span></span><br><span class="line">graph TD</span><br><span class="line">  test&#123;我是一個菱形節點&#125;</span><br></pre></td></tr></table></figure>

<pre class="mermaid">graph TD
  test{我是一個菱形節點}</pre>

<h3 id="六邊形節點-非等寬"><a href="#六邊形節點-非等寬" class="headerlink" title="六邊形節點(非等寬)"></a>六邊形節點(非等寬)</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 六邊形節點的展示就是加上一個修飾符&#123;&#123;&#125;&#125;</span></span><br><span class="line">graph TD</span><br><span class="line">  test&#123;&#123;我是一個六邊形節點&#125;&#125;</span><br></pre></td></tr></table></figure>

<pre class="mermaid">graph TD
  test</pre>

<h3 id="平行-反向平行-四邊形節點"><a href="#平行-反向平行-四邊形節點" class="headerlink" title="平行/反向平行 四邊形節點"></a>平行/反向平行 四邊形節點</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 平行四邊形節點的展示就是加上一個修飾符[//]</span></span><br><span class="line">graph TD</span><br><span class="line">  test1<span class="section">[/我是一個平行四邊形節點/]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 反向平行四邊形節點的展示就是加上一個修飾符[\\]</span></span><br><span class="line">graph TD</span><br><span class="line">  test2<span class="section">[\我是一個反向平行四邊形節點\]</span></span><br></pre></td></tr></table></figure>

<pre class="mermaid">graph TD
  test1[/我是一個平行四邊形節點/]

  test2[\我是一個反向平行四邊形節點\]</pre>

<h3 id="梯形節點"><a href="#梯形節點" class="headerlink" title="梯形節點"></a>梯形節點</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 梯形節點的展示就是加上一個修飾符[/\]</span></span><br><span class="line">graph TD</span><br><span class="line">  test1<span class="section">[/我是一個梯形節點\]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 反向梯形節點的展示就是加上一個修飾符[\/]</span></span><br><span class="line">graph TD</span><br><span class="line">  test2<span class="section">[\反向梯形節點/]</span></span><br></pre></td></tr></table></figure>

<pre class="mermaid">graph TD
  test[/我是一個梯形節點\]
  test2[\反向梯形節點/]</pre>

<h3 id="節點鏈接"><a href="#節點鏈接" class="headerlink" title="節點鏈接"></a>節點鏈接</h3><ul>
<li>帶箭頭的單向鏈接，兩節點之間增加修飾符 –&gt;</li>
<li>不帶箭頭連接線，兩節點之間增加修飾符 —</li>
<li>帶文本信息的連接線，兩節點之間增加修飾符 –text–, 亦或者 — |text|</li>
<li>帶箭頭和文本單向鏈接，兩節點之間增加修飾符 –text–&gt;, 亦或者 –&gt;|text|</li>
<li>帶箭頭的虛線單向鏈接，兩節點之間增加修飾符 -.-&gt;</li>
<li>帶箭頭和文本的虛線單向鏈接，兩節點之間增加修飾符 -.-&gt;</li>
<li>帶箭頭加粗單向鏈接，兩節點之間增加修飾符==&gt;</li>
</ul>
<pre class="mermaid">graph LR
  A ==> B
  B --我是測試文本--> C
  C -.我也是測試文本.-> A
  A ==唉==> D((驚喜不))</pre>

<ul>
<li>箭頭<ul>
<li>-&gt;：實線實箭頭</li>
<li>–&gt;：虛線實箭頭</li>
<li>-&gt;&gt;：實線虛箭頭</li>
<li>–&gt;&gt;：虛線虛箭頭</li>
</ul>
</li>
</ul>
<h3 id="子圖-組"><a href="#子圖-組" class="headerlink" title="子圖(組)"></a>子圖(組)</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 子組寫法, 這樣一個閉合就是一個子組</span></span><br><span class="line">subgraph 名字</span><br><span class="line">  流圖 do sth ...</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">graph TD</span><br><span class="line">  subgraph 組合1</span><br><span class="line">    <span class="attr">A</span> ==&gt; B[/<span class="string">&quot;🎹emoji 也支持&quot;</span>\]</span><br><span class="line">  end</span><br><span class="line">  subgraph 組合2</span><br><span class="line">  B --&quot;(呵呵噠)&quot;--&gt; C</span><br><span class="line">  C -.&quot;給你一顆心:<span class="comment">#9829;&quot;.-&gt; A</span></span><br><span class="line">  end</span><br><span class="line">  subgraph 組合3</span><br><span class="line">  <span class="attr">A</span> ==唉==&gt; D((驚喜不))</span><br><span class="line">  D --你好啊--&gt; B</span><br><span class="line">  end</span><br></pre></td></tr></table></figure>

<pre class="mermaid">graph TD
  subgraph 組合1
    A ==> B[/"🎹emoji 也支持"\]
  end
  subgraph 組合2
  B --"(呵呵噠)"--> C
  C -."給你一顆心:#9829;".-> A
  end
  subgraph 組合3
  A ==唉==> D((驚喜不))
  D --你好啊--> B
  end</pre>

<h2 id="附錄"><a href="#附錄" class="headerlink" title="附錄"></a>附錄</h2><ol>
<li><a href="https://github.com/webappdevelp/hexo-filter-mermaid-diagrams">官方文件</a></li>
<li><a href="https://www.yuque.com/crper/mermaid_intro">mermaid上手指南</a></li>
</ol>
<h2 id="二、語法說明"><a href="#二、語法說明" class="headerlink" title="二、語法說明"></a>二、語法說明</h2><h3 id="範例一"><a href="#範例一" class="headerlink" title="範例一"></a>範例一</h3><pre class="mermaid">  sequenceDiagram
  participant Alice
  participant Bob
  Alice->>John: Hello John, how are you?
  loop Healthcheck
      John->>John: Fight against hypochondria
  end
  Note right of John: Rational thoughts <br/>prevail...
  John-->>Alice: Great!
  John->>Bob: How about you?
  Bob-->>John: Jolly good!</pre>

<h3 id="範例二"><a href="#範例二" class="headerlink" title="範例二"></a>範例二</h3><pre class="mermaid">graph TD;
  A-->B;
  A-->C;
  B-->D;
  C-->D;</pre>

<ul>
<li>關鍵字<ol>
<li>title：表示該序列圖中的標題。</li>
<li>participant：表示該序列圖中的對象。</li>
<li>note：表示該序列圖中的部分說明。關於note以下三種關鍵字：<ul>
<li>left of：表示在當前對象的左側。</li>
<li>right of：表示在當前對象的右側。</li>
<li>over：表示覆蓋在當前對象的上方。</li>
</ul>
</li>
<li>箭頭<ul>
<li>-&gt;：實線實箭頭</li>
<li>–&gt;：虛線實箭頭</li>
<li>-&gt;&gt;：實線虛箭頭</li>
<li>–&gt;&gt;：虛線虛箭頭</li>
</ul>
</li>
<li>換行符號 &lt;br&gt;</li>
</ol>
</li>
</ul>
]]></content>
        
        <categories>
            
            <category> Hexo </category>
            
            <category> 外掛 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Mermaid </tag>
            
            <tag> 流程圖 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
        <title><![CDATA[Mermaid 安裝]]></title>
        <url>http://fankachang.github.io.git/2019/11/10/Hexo/%25E5%25A4%2596%25E6%258E%259B/hexo_mermaid_install/</url>
        <content type="html"><![CDATA[<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><ul>
<li><p>安裝插件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-mermaid-diagrams</span><br><span class="line">brew install yarn</span><br><span class="line">yarn add hexo-filter-mermaid-diagrams</span><br></pre></td></tr></table></figure></li>
<li><p>修改配置文件<br>在 hexo 的 _config.yml 文件（主題）中，添加以下內容：</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mermaid chart</span></span><br><span class="line"><span class="attr">mermaid:</span> <span class="comment">## mermaid url https://github.com/knsv/mermaid</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># default true</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">&quot;7.1.2&quot;</span> <span class="comment"># default v7.1.2</span></span><br><span class="line">  <span class="attr">options:</span>  <span class="comment"># find more api options from https://github.com/knsv/mermaid/blob/master/src/mermaidAPI.js</span></span><br></pre></td></tr></table></figure>

<p>Notice: if you want to use ‘Class diagram’, please edit your ‘_config.yml’ file, set external_link: false. - hexo bug.</p>
</li>
<li><p>js文件修改 ( on themes 中)</p>
<p>根據footer的格式不同，添加的內容不同，以下是 after-footer.ejs 的格式。其他格式參考 github: hexo-filter-mermaid-diagrams</p>
<ul>
<li>after-footer.ejs<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.mermaid.enable) &#123; %&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&#x27;https://unpkg.com/mermaid@&lt;%= theme.mermaid.version %&gt;/dist/mermaid.min.js&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="keyword">if</span> (<span class="built_in">window</span>.mermaid) &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      mermaid.initialize(&#123;<span class="attr">theme</span>: <span class="string">&#x27;forest&#x27;</span>&#125;);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure></li>
<li>swig<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.mermaid.enable %&#125;</span><br><span class="line">  &lt;script src=<span class="string">&#x27;https://unpkg.com/mermaid@&#123;&#123; theme.mermaid.version &#125;&#125;/dist/mermaid.min.js&#x27;</span>&gt;&lt;/script&gt;</span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    if (window.mermaid) &#123;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">      mermaid.initialize(</span><span class="template-variable">&#123;&#123; <span class="name">JSON.stringify</span>(<span class="name">theme.mermaid.options</span>) &#125;&#125;</span><span class="xml">);</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">    &#125;</span></span></span></span><br><span class="line"><span class="xml"><span class="handlebars"><span class="xml">  </span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h2 id="測試範例"><a href="#測試範例" class="headerlink" title="測試範例"></a>測試範例</h2><h3 id="範例一"><a href="#範例一" class="headerlink" title="範例一"></a>範例一</h3><pre class="mermaid">  sequenceDiagram
  participant Alice
  participant Bob
  Alice->>John: Hello John, how are you?
  loop Healthcheck
      John->>John: Fight against hypochondria
  end
  Note right of John: Rational thoughts <br/>prevail...
  John-->>Alice: Great!
  John->>Bob: How about you?
  Bob-->>John: Jolly good!</pre>

<h3 id="範例二"><a href="#範例二" class="headerlink" title="範例二"></a>範例二</h3><pre class="mermaid">graph TD;
  A-->B;
  A-->C;
  B-->D;
  C-->D;</pre>

<h2 id="附錄"><a href="#附錄" class="headerlink" title="附錄"></a>附錄</h2><h3 id="一、參考資料"><a href="#一、參考資料" class="headerlink" title="一、參考資料"></a>一、<a href="https://github.com/webappdevelp/hexo-filter-mermaid-diagrams">參考資料</a></h3><h3 id="二、語法說明"><a href="#二、語法說明" class="headerlink" title="二、語法說明"></a>二、語法說明</h3><ul>
<li>關鍵字<ol>
<li>title：表示該序列圖中的標題。</li>
<li>participant：表示該序列圖中的對象。</li>
<li>note：表示該序列圖中的部分說明。關於note以下三種關鍵字：<ul>
<li>left of：表示在當前對象的左側。</li>
<li>right of：表示在當前對象的右側。</li>
<li>over：表示覆蓋在當前對象的上方。</li>
</ul>
</li>
<li>箭頭<ul>
<li>-&gt;：實線實箭頭</li>
<li>–&gt;：虛線實箭頭</li>
<li>-&gt;&gt;：實線虛箭頭</li>
<li>–&gt;&gt;：虛線虛箭頭</li>
</ul>
</li>
<li>換行符號 &lt;br&gt;</li>
</ol>
</li>
</ul>
]]></content>
        
        <categories>
            
            <category> Hexo </category>
            
            <category> 外掛 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Mermaid </tag>
            
        </tags>
        
    </entry>
    
    <entry>
        <title><![CDATA[依據目錄結構分類 - hexo-directory-category]]></title>
        <url>http://fankachang.github.io.git/2019/11/10/Hexo/%25E5%25A4%2596%25E6%258E%259B/hexo_directory_category/</url>
        <content type="html"><![CDATA[<h2 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h2><ul>
<li>安裝後可依據目錄自行生成分類</li>
<li>搭配的樣板：ylion</li>
</ul>
<h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;your-hexo-site&gt;</span><br><span class="line">npm install --save hexo-directory-category</span><br></pre></td></tr></table></figure>

<h2 id="設定"><a href="#設定" class="headerlink" title="設定"></a>設定</h2><ul>
<li><p>You can configure this plugin in site _config.yml.</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">auto_dir_categorize:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># options:true, false; default is true</span></span><br><span class="line">  <span class="attr">force:</span> <span class="literal">false</span> <span class="comment"># options:true, false; default is false</span></span><br></pre></td></tr></table></figure></li>
<li><p>若 force 開啟後可在文章中設定強制分類</p>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># file: ./_posts/Linux/Vim/note/test.md</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="attr">categories:</span> [<span class="string">CS</span>, <span class="string">Usage</span>]</span><br><span class="line"><span class="attr">tags:</span> [<span class="string">...</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># After hexo generate, it also will convert to categories: [Linux, Vim, note]</span></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
        
        <categories>
            
            <category> Hexo </category>
            
            <category> 外掛 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> category </tag>
            
        </tags>
        
    </entry>
    
    
    
</search>
